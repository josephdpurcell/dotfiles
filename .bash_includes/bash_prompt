# .bash_prompt

# Here you get to choose which prompt type to use by setting BASH_PROMPT_TYPE.
__set_bash_prompt_type()
{
    local kernel
    local cpuname
    kernel=`uname -s`
    cpuname=`uname -n`
    if [ "$kernel" = "Darwin" ]; then
        # change color for Mac
        BASH_PROMPT_TYPE=4
        # set whether or not to use a rotating image for the end of prompt character
        BASH_PROMPT_AWESOME=1
    else
        # change color for Linux
        BASH_PROMPT_TYPE=5
        # set whether or not to use a rotating image for the end of prompt character
        BASH_PROMPT_AWESOME=0
    fi
}


# Here, we echo what comes after the username,
# i.e. george@george-desktop
# where "@george-desktop" gets printed to STDOUT here
__environment()
{
    cpuname=`uname -n`
	name=`echo $cpuname | sed "s/\.[^\.]*$//g"`
	echo "@"$name
}

# ==============================
# DO NOT EDIT BELOW THIS LINE!!!
# ==============================

if [ "`declare -f __set_bash_prompt_type > /dev/null; echo $?`" -eq 0 ]; then
    __set_bash_prompt_type
else
    BASH_PROMPT_TYPE=99
fi

# add core of prompt
if [ "$BASH_PROMPT_TYPE" -eq 1 ]; then
    # magenta
    export PS1='\[\e[0;35m\][\u$(__environment) \W]\[\e[1;32m\]$(__git_ps1 "(%s)")\[\e[0m\]\[\e[0;35m\]'
    export GREP_COLOR='1;35' # green (this may get overwritten by bash_prompt)
elif [ "$BASH_PROMPT_TYPE" -eq 2 ]; then
    # yellow
    export PS1='\[\e[0;33m\][\u$(__environment) \W]\[\e[1;32m\]$(__git_ps1 "(%s)")\[\e[0m\]\[\e[0;33m\]'
    export GREP_COLOR='1;33' # green (this may get overwritten by bash_prompt)
elif [ "$BASH_PROMPT_TYPE" -eq 3 ]; then
    # blue
    export PS1='\[\e[0;34m\][\u$(__environment) \W]\[\e[1;32m\]$(__git_ps1 "(%s)")\[\e[0m\]\[\e[0;34m\]'
    export GREP_COLOR='1;33' # green (this may get overwritten by bash_prompt)
elif [ "$BASH_PROMPT_TYPE" -eq 4 ]; then
    # yellow with green $
    export PS1='\[\e[0;33m\][\u$(__environment) \W]\[\e[1;32m\]$(__git_ps1 "(%s)")\[\e[0m\]\[\e[0;32m\]'
    export GREP_COLOR='1;33' # green (this may get overwritten by bash_prompt)
else
    # green
    export PS1='\[\e[0;32m\][\u$(__environment) \W]\[\e[1;32m\]$(__git_ps1 "(%s)")\[\e[0m\]\[\e[0;32m\]'
    export GREP_COLOR='1;32' # green (this may get overwritten by bash_prompt)
fi

# add ending
if [ "$BASH_PROMPT_AWESOME" -eq 1 ]
then
    #export PS1=$PS1'\342\230\240 '
    prompt_reset=$PS1'$ '
    day=`date +"%j"`
    mod=$(($day % 5))
    if [ $mod -eq 0 ]
    then
        export PS1=$PS1'üçÄ  '
    elif [ $mod -eq 1 ]
    then
        export PS1=$PS1'üí£  '
    elif [ $mod -eq 2 ]
    then
        export PS1=$PS1'üîÆ  '
    elif [ $mod -eq 3 ]
    then
        export PS1=$PS1'üíÄ  '
    elif [ $mod -eq 4 ]
    then
        export PS1=$PS1'üåé  '
    else
        export PS1=$PS1'$ '
    fi
    prompt_awesome=$PS1;
else
    prompt_reset=$PS1'$ '
    export PS1=$PS1'$ '
    prompt_awesome=$PS1;
fi

# reset prompt to something "normal"
resetprompt()
{
    export PS1=$prompt_reset;
}

# change prompt back to what it was
awesomeprompt()
{
    export PS1=$prompt_awesome;
}

